@use '../abstracts' as *;

@mixin modal-button-style($clr-hover, $clr-active, $outline) {
  @media (hover: hover) {
    @at-root &:hover {
      color: var(--clr-neutral-50);
      background-color: $clr-hover;
    }
  }

  @at-root &:active {
    outline: $outline;
    background-color: $clr-active;
  }
}

@mixin modal-priority-style($priority) {
  label:has(option[value='#{$priority}']:checked) {
    color: var(--clr-priority-#{$priority});
  }

  select:has(option[value='#{$priority}']:checked) {
    outline: 1px solid var(--clr-priority-#{$priority});
  }

  option[value='#{$priority}'] {
    background-color: var(--clr-priority-#{$priority});
    font-weight: $fw-bold;
  }
}

.blur {
  font-size: 1rem;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  backdrop-filter: blur(2px);
}

.modal {
  --gap: 0.5rem;
  --input-border-radius: 1rem;
  --input-padding: 0.25rem 1rem;

  --clr-error: rgb(239 68 68);

  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

  background-color: var(--clr-neutral-100);
  border-width: 1px;
  border-radius: 1rem;
  padding: 1rem;
  color: var(--clr-neutral-600);
  width: max-content;

  &__form {
    display: grid;

    gap: var(--gap);
  }

  &__title {
    font-size: $fs-700;
    font-weight: $fw-bold;
  }

  .form-group {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--gap);

    label {
      align-self: end;
    }

    .error {
      grid-row: 1;
      grid-column: 2;
      display: none;
      text-align: end;
      font-size: $fs-300;
      font-weight: $fw-bold;
      color: var(--clr-error);
    }
  }

  .form-group--select {
    select {
      grid-column: 1 / -1;
    }

    & > :invalid + .error {
      display: block;
    }
  }

  .form-group--input {
    input {
      grid-column: 1 / -1;
    }

    input:not(:focus):invalid {
      color: var(--clr-error);
      border: 1px solid var(--clr-error);
    }

    & > :not(:focus):invalid + .error {
      display: block;
    }
  }

  input,
  select,
  &__add,
  &__cancel {
    padding: var(--input-padding);
    border-radius: var(--input-border-radius);
  }

  select {
    min-width: 0;
  }

  option[value='none'] {
    color: var(--clr-neutral-100);
  }

  @include modal-priority-style('none');
  @include modal-priority-style('low');
  @include modal-priority-style('medium');
  @include modal-priority-style('high');

  textarea {
    padding: 1rem;
    border: 1px solid;
  }

  label {
    font-size: $fs-300;
    text-transform: uppercase;
    color: var(--clr-neutral-500);
  }

  label[for='priority'] {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  &__add {
    --clr-hover: var(--clr-primary-600);
    --clr-active: var(--clr-primary-750);
    --outline: 2px solid var(--clr-primary-400);

    background-color: var(--clr-primary-500);
    color: var(--clr-neutral-50);
  }

  &__cancel {
    --clr-hover: var(--clr-neutral-400);
    --clr-active: var(--clr-neutral-500);
    --outline: 2px solid var(--clr-neutral-400);

    background-color: var(--clr-neutral-300);
  }

  &__add,
  &__cancel {
    $clr-hover: var(--clr-hover);
    $clr-active: var(--clr-active);
    $outline: var(--outline);

    color: inherit;
    font-weight: bold;
    text-transform: uppercase;

    @include modal-button-style($clr-hover, $clr-active, $outline);
  }
}
